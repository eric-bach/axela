{
  "openapi": "3.0.0",
  "info": {
    "title": "Member Services Bot API",
    "version": "1.0.0",
    "description": "Member service APIs for a retail store selling and booking trips"
  },
  "paths": {
    "/member/{memberNumber}": {
      "get": {
        "summary": "Get member information",
        "description": "Based on provided member number, return member information like member ID, first name, and last name",
        "operationId": "getMemberInfo",
        "parameters": [
          {
            "name": "MemberNumber",
            "in": "path",
            "description": "Member Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get member information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "int",
                        "description": "This is the Member ID used to place the order"
                      },
                      "addressLine1": {
                        "type": "string",
                        "description": "Member billing address line 1"
                      },
                      "addressLine2": {
                        "type": "string",
                        "description": "Member billing address line 2"
                      },
                      "city": {
                        "type": "string",
                        "description": "Member billing city"
                      },
                      "province": {
                        "type": "string",
                        "description": "Member billing state"
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "Member billing postal code"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "Member first name"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Member last name"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/place_order": {
      "get": {
        "summary": "Sub task to place an order on behalf of the customer",
        "description": "Place an order for a shoe by creating an Order record and updating inventory in the database",
        "operationId": "placeshoeOrder",
        "parameters": [
          {
            "name": "ShoeID",
            "in": "query",
            "description": "Shoe ID to place an order",
            "required": true,
            "schema": {
              "type": "int"
            }
          },
          {
            "name": "CustomerID",
            "in": "query",
            "description": "Customer ID to place an order",
            "required": true,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order has been placed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Your order has been placed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check_inventory": {
      "get": {
        "summary": "Returns all details related to shoes, including inventory details",
        "description": "Checks inventory for shoes and returns all availale information about available shoes, including shoe ID, shoe colors, inventory, best fit activity, style description and price ",
        "operationId": "checkShoeInventory",
        "responses": {
          "200": {
            "description": "Returns Shoe information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ShoeID": {
                      "type": "int",
                      "description": "This is the shoe ID for this shoe"
                    },
                    "BestFitActivity": {
                      "type": "string",
                      "description": "Best fit activity for this shoe"
                    },
                    "StyleDesc": {
                      "type": "string",
                      "description": "Detailed description of the shoe"
                    },
                    "ShoeColors": {
                      "type": "string",
                      "description": "The colors of this shoe"
                    },
                    "Price": {
                      "type": "string",
                      "description": "Price of this shoe"
                    },
                    "InvCount": {
                      "type": "int",
                      "description": "Inventory count"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
